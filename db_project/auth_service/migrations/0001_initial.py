# Generated by Django 5.2.6 on 2025-10-19 13:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('type', models.CharField(choices=[('simple', 'Обычный'), ('foreign', 'Заграничный')], verbose_name='Тип паспорта')),
                ('series', models.CharField(max_length=4, verbose_name='Серия')),
                ('number', models.CharField(max_length=7, verbose_name='Номер')),
                ('issue_date', models.DateField(verbose_name='Дата выдачи')),
                ('issued_by', models.CharField(max_length=255, verbose_name='Кем выдан')),
                ('authority_code', models.CharField(max_length=7, verbose_name='Код подразделения')),
                ('registration_address', models.CharField(blank=True, default='', verbose_name='Адрес регистрации')),
                ('residential_address', models.CharField(blank=True, default='', verbose_name='Адрес фактического проживания')),
            ],
            options={
                'verbose_name': 'Паспорт',
                'verbose_name_plural': 'Паспорта',
                'unique_together': {('type', 'series', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dt_created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('second_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Отчество')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], verbose_name='Пол')),
                ('snils', models.CharField(max_length=11, unique=True, verbose_name='СНИЛС')),
                ('inn', models.CharField(max_length=12, unique=True, verbose_name='ИНН')),
                ('work_phone', models.CharField(max_length=11, verbose_name='Рабочий телефон')),
                ('phone', models.CharField(blank=True, default='', max_length=11, verbose_name='Рабочий телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('passport', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='employee', to='auth_service.passport', verbose_name='Паспорт')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
